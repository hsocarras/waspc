#Based on Cpython Tools/script/generate_token.py
#Copyright Python

import os

def update_file(file, content):
    '''
    function to update or create file
    '''
    try:
        with open(file, 'r') as fobj:
            if fobj.read() == content:
                return False
    except (OSError, ValueError):
        pass
    with open(file, 'w') as fobj:
        fobj.write(content)
    return True


wasm_h_template = '''\
/**
 * @file %s.h 
 * @brief header file for wasm tester. 
 *
 * @copyright Hector E. Socarras
 */

 // Auto-generated by wasm2header.py

#ifndef WASPC_TEST_%s_H
#define WASPC_TEST_%s_H

#include <stdint>

uint_8 *%s = {%s};

#endif
'''
def byte_to_hex_string(byte_value):
    return format(byte_value, '02X')

def make_h(infile, out_folder):
   
    name_ext = os.path.basename(infile)
    name = os.path.splitext(name_ext)[0]
    out_file_h = out_folder + '/' + name +'.h'

    with open(infile, 'rb') as wasm:
        buff = wasm.read()
        init = ''
        count = 0
        for val in buff:
            hex = byte_to_hex_string(val)
            format_hex = '0x'+ hex
            init = init + format_hex + ','      #array init string
            count+=1
            if count == 15:
                init = init + "\n               "
                count = 0
            

        content = init[:-1]     #remove las , character

        if update_file(out_file_h, wasm_h_template % (
                name, name, name, name,  
                content
            )):
            print("%s generated from %s" % (out_file_h, infile))
    
def main(infile, out_folder='./wasm'):
    make_h(infile, out_folder)
    


if __name__ == '__main__':
    import sys
    main(*sys.argv[1:])